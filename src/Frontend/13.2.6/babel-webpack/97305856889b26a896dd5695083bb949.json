{"ast":null,"code":"import _asyncToGenerator from \"/home/sander/Projects/quitter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@auth0/auth0-angular\";\nconst baseUrl = `${environment.apiURL}/queet`;\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class QueetService {\n  constructor(httpClient, auth) {\n    this.httpClient = httpClient;\n    this.auth = auth;\n    auth.idTokenClaims$.subscribe(claims => this.token = claims === null || claims === void 0 ? void 0 : claims.__raw);\n  }\n\n  fetchQueets() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return yield _this.httpClient.get(baseUrl, {\n        headers: {\n          Authorization: `Bearer ${_this.token}`\n        }\n      });\n    })();\n  }\n\n  fetchQueetsByUserId(id) {\n    return this.httpClient.get(`${baseUrl}/profile/${id}`, {\n      headers: {\n        Authorization: `Bearer ${this.token}`\n      }\n    });\n  }\n\n  postQueet(queet) {\n    console.log(queet);\n    return this.httpClient.post(baseUrl, queet, httpOptions);\n  }\n\n}\n\nQueetService.ɵfac = function QueetService_Factory(t) {\n  return new (t || QueetService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n};\n\nQueetService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: QueetService,\n  factory: QueetService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/sander/Projects/quitter/src/app/services/queet.service.ts"],"names":["HttpHeaders","environment","i0","i1","i2","baseUrl","apiURL","httpOptions","headers","QueetService","constructor","httpClient","auth","idTokenClaims$","subscribe","claims","token","__raw","fetchQueets","get","Authorization","fetchQueetsByUserId","id","postQueet","queet","console","log","post","ɵfac","QueetService_Factory","t","ɵɵinject","HttpClient","AuthService","ɵprov","ɵɵdefineInjectable","factory","providedIn"],"mappings":";AAAA,SAASA,WAAT,QAA4B,sBAA5B;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,MAAMC,OAAO,GAAI,GAAEJ,WAAW,CAACK,MAAO,QAAtC;AACA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,OAAO,EAAE,IAAIR,WAAJ,CAAgB;AACrB,oBAAgB;AADK,GAAhB;AADO,CAApB;AAKA,OAAO,MAAMS,YAAN,CAAmB;AACtBC,EAAAA,WAAW,CAACC,UAAD,EAAaC,IAAb,EAAmB;AAC1B,SAAKD,UAAL,GAAkBA,UAAlB;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACAA,IAAAA,IAAI,CAACC,cAAL,CAAoBC,SAApB,CAA+BC,MAAD,IAAa,KAAKC,KAAL,GAAaD,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACE,KAA/G;AACH;;AACKC,EAAAA,WAAW,GAAG;AAAA;;AAAA;AAChB,mBAAa,KAAI,CAACP,UAAL,CAAgBQ,GAAhB,CAAoBd,OAApB,EAA6B;AACtCG,QAAAA,OAAO,EAAE;AACLY,UAAAA,aAAa,EAAG,UAAS,KAAI,CAACJ,KAAM;AAD/B;AAD6B,OAA7B,CAAb;AADgB;AAMnB;;AACDK,EAAAA,mBAAmB,CAACC,EAAD,EAAK;AACpB,WAAO,KAAKX,UAAL,CAAgBQ,GAAhB,CAAqB,GAAEd,OAAQ,YAAWiB,EAAG,EAA7C,EAAgD;AACnDd,MAAAA,OAAO,EAAE;AACLY,QAAAA,aAAa,EAAG,UAAS,KAAKJ,KAAM;AAD/B;AAD0C,KAAhD,CAAP;AAKH;;AACDO,EAAAA,SAAS,CAACC,KAAD,EAAQ;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO,KAAKb,UAAL,CAAgBgB,IAAhB,CAAqBtB,OAArB,EAA8BmB,KAA9B,EAAqCjB,WAArC,CAAP;AACH;;AAvBqB;;AAyB1BE,YAAY,CAACmB,IAAb,GAAoB,SAASC,oBAAT,CAA8BC,CAA9B,EAAiC;AAAE,SAAO,KAAKA,CAAC,IAAIrB,YAAV,EAAwBP,EAAE,CAAC6B,QAAH,CAAY5B,EAAE,CAAC6B,UAAf,CAAxB,EAAoD9B,EAAE,CAAC6B,QAAH,CAAY3B,EAAE,CAAC6B,WAAf,CAApD,CAAP;AAA0F,CAAjJ;;AACAxB,YAAY,CAACyB,KAAb,GAAqB,aAAchC,EAAE,CAACiC,kBAAH,CAAsB;AAAEnB,EAAAA,KAAK,EAAEP,YAAT;AAAuB2B,EAAAA,OAAO,EAAE3B,YAAY,CAACmB,IAA7C;AAAmDS,EAAAA,UAAU,EAAE;AAA/D,CAAtB,CAAnC","sourcesContent":["import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@auth0/auth0-angular\";\nconst baseUrl = `${environment.apiURL}/queet`;\nconst httpOptions = {\n    headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n    }),\n};\nexport class QueetService {\n    constructor(httpClient, auth) {\n        this.httpClient = httpClient;\n        this.auth = auth;\n        auth.idTokenClaims$.subscribe((claims) => (this.token = claims === null || claims === void 0 ? void 0 : claims.__raw));\n    }\n    async fetchQueets() {\n        return await this.httpClient.get(baseUrl, {\n            headers: {\n                Authorization: `Bearer ${this.token}`,\n            },\n        });\n    }\n    fetchQueetsByUserId(id) {\n        return this.httpClient.get(`${baseUrl}/profile/${id}`, {\n            headers: {\n                Authorization: `Bearer ${this.token}`,\n            },\n        });\n    }\n    postQueet(queet) {\n        console.log(queet);\n        return this.httpClient.post(baseUrl, queet, httpOptions);\n    }\n}\nQueetService.ɵfac = function QueetService_Factory(t) { return new (t || QueetService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService)); };\nQueetService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: QueetService, factory: QueetService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}