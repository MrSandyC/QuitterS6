{"ast":null,"code":"import _asyncToGenerator from \"/home/sander/Projects/quitter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@auth0/auth0-angular\";\nconst baseUrl = `${environment.apiURL}/queet`;\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class QueetService {\n  constructor(httpClient, auth) {\n    this.httpClient = httpClient;\n    this.auth = auth;\n    this.token = this.auth.getAccessTokenSilently().pipe().subscribe(user => this.token = user);\n    console.log(this.token);\n  }\n\n  fetchQueets() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.token = yield _this.auth.getUser();\n      return _this.httpClient.get(baseUrl, {\n        headers: {\n          Authorization: `Bearer ${_this.token}`\n        }\n      });\n    })();\n  }\n\n  postQueet(queet) {\n    console.log(queet);\n    return this.httpClient.post(baseUrl, queet, httpOptions);\n  }\n\n}\n\nQueetService.ɵfac = function QueetService_Factory(t) {\n  return new (t || QueetService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n};\n\nQueetService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: QueetService,\n  factory: QueetService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/sander/Projects/quitter/src/app/services/queet.service.ts"],"names":["HttpHeaders","environment","i0","i1","i2","baseUrl","apiURL","httpOptions","headers","QueetService","constructor","httpClient","auth","token","getAccessTokenSilently","pipe","subscribe","user","console","log","fetchQueets","getUser","get","Authorization","postQueet","queet","post","ɵfac","QueetService_Factory","t","ɵɵinject","HttpClient","AuthService","ɵprov","ɵɵdefineInjectable","factory","providedIn"],"mappings":";AAAA,SAASA,WAAT,QAA4B,sBAA5B;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,MAAMC,OAAO,GAAI,GAAEJ,WAAW,CAACK,MAAO,QAAtC;AACA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,OAAO,EAAE,IAAIR,WAAJ,CAAgB;AACrB,oBAAgB;AADK,GAAhB;AADO,CAApB;AAKA,OAAO,MAAMS,YAAN,CAAmB;AACtBC,EAAAA,WAAW,CAACC,UAAD,EAAaC,IAAb,EAAmB;AAC1B,SAAKD,UAAL,GAAkBA,UAAlB;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,KAAL,GAAa,KAAKD,IAAL,CACRE,sBADQ,GAERC,IAFQ,GAGRC,SAHQ,CAGGC,IAAD,IAAW,KAAKJ,KAAL,GAAaI,IAH1B,CAAb;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;AACH;;AACKO,EAAAA,WAAW,GAAG;AAAA;;AAAA;AAChB,MAAA,KAAI,CAACP,KAAL,SAAmB,KAAI,CAACD,IAAL,CAAUS,OAAV,EAAnB;AACA,aAAO,KAAI,CAACV,UAAL,CAAgBW,GAAhB,CAAoBjB,OAApB,EAA6B;AAChCG,QAAAA,OAAO,EAAE;AACLe,UAAAA,aAAa,EAAG,UAAS,KAAI,CAACV,KAAM;AAD/B;AADuB,OAA7B,CAAP;AAFgB;AAOnB;;AACDW,EAAAA,SAAS,CAACC,KAAD,EAAQ;AACbP,IAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACA,WAAO,KAAKd,UAAL,CAAgBe,IAAhB,CAAqBrB,OAArB,EAA8BoB,KAA9B,EAAqClB,WAArC,CAAP;AACH;;AArBqB;;AAuB1BE,YAAY,CAACkB,IAAb,GAAoB,SAASC,oBAAT,CAA8BC,CAA9B,EAAiC;AAAE,SAAO,KAAKA,CAAC,IAAIpB,YAAV,EAAwBP,EAAE,CAAC4B,QAAH,CAAY3B,EAAE,CAAC4B,UAAf,CAAxB,EAAoD7B,EAAE,CAAC4B,QAAH,CAAY1B,EAAE,CAAC4B,WAAf,CAApD,CAAP;AAA0F,CAAjJ;;AACAvB,YAAY,CAACwB,KAAb,GAAqB,aAAc/B,EAAE,CAACgC,kBAAH,CAAsB;AAAErB,EAAAA,KAAK,EAAEJ,YAAT;AAAuB0B,EAAAA,OAAO,EAAE1B,YAAY,CAACkB,IAA7C;AAAmDS,EAAAA,UAAU,EAAE;AAA/D,CAAtB,CAAnC","sourcesContent":["import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@auth0/auth0-angular\";\nconst baseUrl = `${environment.apiURL}/queet`;\nconst httpOptions = {\n    headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n    }),\n};\nexport class QueetService {\n    constructor(httpClient, auth) {\n        this.httpClient = httpClient;\n        this.auth = auth;\n        this.token = this.auth\n            .getAccessTokenSilently()\n            .pipe()\n            .subscribe((user) => (this.token = user));\n        console.log(this.token);\n    }\n    async fetchQueets() {\n        this.token = await this.auth.getUser();\n        return this.httpClient.get(baseUrl, {\n            headers: {\n                Authorization: `Bearer ${this.token}`,\n            },\n        });\n    }\n    postQueet(queet) {\n        console.log(queet);\n        return this.httpClient.post(baseUrl, queet, httpOptions);\n    }\n}\nQueetService.ɵfac = function QueetService_Factory(t) { return new (t || QueetService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService)); };\nQueetService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: QueetService, factory: QueetService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}